apply plugin: 'java'
apply plugin: 'application'

applicationDefaultJvmArgs = ["-Xmx4g"]

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "http://cogcomp.cs.illinois.edu/m2repo"
    }
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.7'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.7'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.22'
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.22'
    compile group: 'args4j', name: 'args4j', version: '2.33'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.12'
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.6'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.6'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.6'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    compile group: 'org.apache.commons', name: 'commons-math3', version: '3.6'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile group: 'commons-logging', name: 'commons-logging', version: '1.2'
    compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.3'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.0.1'
    compile group: 'edu.illinois.cs.cogcomp', name: 'illinois-ner', version: '3.0.80'
    compile group: 'junit', name: 'junit', version: '4.12'
}

mainClassName = "ca.uwaterloo.stock_trends_analyzer.StockTrendsAnalyzer"

task createStartScripts(type: CreateStartScripts) {
    mainClassName = "ca.uwaterloo.stock_trends_analyzer.StockTrendsAnalyzer"
    applicationName = 'StockTrendsAnalyzer'
}

task copyDepLib(type: Copy) {
    into "build/lib"
    from configurations.runtime
}

task copyAppLib(type: Copy) {
    from 'build/libs'
    into 'build/lib'
}

build.dependsOn([copyDepLib, copyAppLib])
